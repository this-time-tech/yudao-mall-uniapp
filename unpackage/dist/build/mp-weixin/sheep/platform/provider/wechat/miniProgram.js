"use strict";const e=require("../../../../common/vendor.js"),n=require("../../../api/member/auth.js"),i=require("../../../api/member/social.js"),t=require("../../../api/member/user.js");let o=[];function a(n){e.index.setStorageSync("openid",n)}async function c(){const{code:e,data:n}=await i.SocialApi.getSocialUser(34);if(0===e)return n}const s=async(n=!0)=>{if(e.index.canIUse("getUpdateManager")){const i=e.index.getUpdateManager();i.onCheckForUpdate((function(t){t.hasUpdate?(i.onUpdateReady((function(){e.index.showModal({title:"更新提示",content:"新版本已经准备好，是否重启应用？",success:function(e){e.confirm&&i.applyUpdate()}})})),i.onUpdateFailed((function(){}))):n||e.index.showModal({title:"当前为最新版本",showCancel:!1})}))}};const r={load:function(){s(),async function(){const{code:e,data:n}=await i.SocialApi.getSubscribeTemplateList();0===e&&(o=n)}()},login:async()=>new Promise((async(i,t)=>{const o=await e.index.login();if("login:ok"!==o.errMsg)return i(!1);const c=await n.AuthUtil.socialLogin(34,o.code,"default");return 0===c.code?(a(c.data.openid),i(!0)):i(!1)})),bind:()=>new Promise((async(n,t)=>{const o=await e.index.login();if("login:ok"!==o.errMsg)return n(!1);const c=await i.SocialApi.socialBind(34,o.code,"default");return 0===c.code?(a(c.data),n(!0)):n(!1)})),unbind:async e=>{const{code:n}=await i.SocialApi.socialUnbind(34,e);return 0===n},bindUserPhoneNumber:e=>new Promise((async(n,i)=>{const{code:o}=await t.UserApi.updateUserMobileByWeixin(e.code);0===o&&n(!0),n(!1)})),mobileLogin:async i=>new Promise((async(t,o)=>{if("getPhoneNumber:ok"!==i.errMsg)return t(!1);const c=await e.index.login();if("login:ok"!==c.errMsg)return t(!1);const s=await n.AuthUtil.weixinMiniAppLogin(i.code,c.code,"default");return 0===s.code?(a(s.data.openid),t(!0)):t(!1)})),getInfo:c,getOpenid:async function(n=!1){let i=e.index.getStorageSync("openid");if(!i&&n){const e=await c();e&&e.openid&&(i=e.openid,a(i))}return i},subscribeMessage:function(n,i){let t=[];if("string"==typeof n){const e=o.find((e=>e.title.includes(n)));e&&t.push(e.id)}"object"==typeof n&&n.forEach((e=>{const n=o.find((n=>n.title.includes(e)));n&&t.push(n.id)})),0!==t.length&&e.index.requestSubscribeMessage({tmplIds:t,success:()=>{i&&i()},fail:e=>{console.log(e)}})},checkUpdate:s};exports.service=r;
